# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------
set-option -g detach-on-destroy off
setw -g mode-keys vi
set -g mouse on
set-option -g focus-events on

# Define color variables
color_orange="colour166"
color_purple="colour134"
color_green="colour076"
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white"

# Define additional colors
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"

# -----------------------------------------------------------------------------
# Clipboard Integration (Using xsel instead of xclip)
# -----------------------------------------------------------------------------
# Use xsel to copy to system clipboard
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel --input --clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel --clipboard --input"

# -----------------------------------------------------------------------------
# Status Bar Customization - Show File Path Instead of Git Branch
# -----------------------------------------------------------------------------

# Status Bar - Show Current File Path (Pane Current Path)
set -g status-left-length 50
set -g status-right-length 150  # Adjust the width to fit the file path
set -g status-right "#{pane_current_path} | #{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date $wg_battery | #{online_status}"

# To ensure the path doesn't overlap with the rest of the status line
set -g status-justify left
set -g status-position top
set -g status-interval 5

# -----------------------------------------------------------------------------
# Key Bindings and Functionality (Your custom key bindings)
# -----------------------------------------------------------------------------
set -g prefix `  # New prefix key
bind ` send-prefix

# Allow multiple terminal windows to view the same tmux session
setw -g aggressive-resize on

# Remove delay when switching between Vim modes
set -sg escape-time 1

# Use Vim-style key bindings
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Window and pane settings
set -g base-index 1
setw -g pane-base-index 1

# -----------------------------------------------------------------------------
# Window Monitoring and Activity
# -----------------------------------------------------------------------------
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# -----------------------------------------------------------------------------
# Plugin Manager - TPM (Tmux Plugin Manager)
# -----------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-online-status'

# -----------------------------------------------------------------------------
# System Status (CPU, Memory, Battery, etc.)
# -----------------------------------------------------------------------------
set -g @sysstat_mem_view_tmpl '#Used #[fg=#{mem.color}]#{mem.used}#[default] out of #{mem.total}'
set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color3}]CPU:#[default] #[fg=#{cpu.color},bg=#{cpu.color2}]#{cpu.pused}#[default]'

set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# -----------------------------------------------------------------------------
# Appearance (Status Bar Colors)
# -----------------------------------------------------------------------------
set -g status-style "fg=$color_status_text,bg=$color_dark"
set -g message-style "fg=$color_main,bg=$color_dark"
set -g window-status-style "fg=$color_status_text,bg=$color_dark"
set -g window-status-current-style "fg=$color_light,bg=$color_main,bold"
set -g window-status-current-format "#[fg=$color_dark,bg=$color_main]#[default] #I:#W#[fg=$color_main,bg=$color_dark]#[default]"
setw -g pane-active-border-style "fg=$color_main"

# -----------------------------------------------------------------------------
# Auto Rename and Session/Window Control
# -----------------------------------------------------------------------------
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Enable mouse support
set -g mouse on

# ---------------------------------------------------
# Shortcuts to manage tmux windows and panes
# ---------------------------------------------------

# Move between panes using Shift + Arrow keys
bind -n S-Left select-pane -L
bind -n S-Right select-pane -R
bind -n S-Up select-pane -U
bind -n S-Down select-pane -D

# Split pane vertically (side-by-side) in the same directory
bind | split-window -h -c "#{pane_current_path}"

# Split pane horizontally (top-bottom) in the same directory
bind - split-window -v -c "#{pane_current_path}"

# Rename window automatically after creation
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Kill window/pane/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# ---------------------------------------------------
# Plugins Initialization
# ---------------------------------------------------
# Initialize TPM (keep this line at the very bottom of your tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

# Reload tmux configuration with 'r'
bind-key r source-file ~/.config/tmux/.tmux.conf \; display "Config reloaded"


