# -----------------------------------------------------------------------------
# This config is targeted for tmux 3.0+.
#
# Read the "Plugin Manager" section (bottom) before trying to use this config!
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------
set-option -g detach-on-destroy off
setw -g mode-keys vi

# Copy using mouse
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
set-option -s set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

# Set a new prefix / leader key.
set -g prefix `
bind ` send-prefix

# Allow opening multiple terminals to view the same session at different sizes.
setw -g aggressive-resize on

# Remove delay when switching between Vim modes.
set -sg escape-time 1

# Allow Vim's FocusGained to work when your terminal gains focus.
#   Requires Vim plugin: https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on
set-option -g status off

# Add a bit more scroll history in the buffer.
set -g history-limit 50000

# Enable color support inside of tmux.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Send xterm compatible control arrow keys so they work with Vim.
setw -g xterm-keys on

# Ensure window titles get renamed automatically.
setw -g automatic-rename

# Ensure window index numbers get reordered on delete.
set-option -g renumber-windows on

# Start windows and panes index at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1

# Enable full mouse support.
set -g mouse on

# Various colors.
set -g status-style fg=colour244
set -g window-status-current-style fg=colour222
set -g pane-border-style fg=colour240
set -g pane-active-border-style fg=colour243

set -g status-left ''
set -g status-left-length 0
set -g status-right " #(tms sessions)"
set -g status-right-length 0


# Display a clock on the bottom right of the status bar.
#set -g status-right '%a %Y-%m-%d %H:%M'
#set -g status-right-length 20

#――session switchers――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
# bind-key j choose-tree -swZ
# 
# # non-popup
# bind C-j new-window -n "session-switcher" "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}' \
#     	--bind 'enter:execute(tmux switch-client -t {})+accept'"
# # popup
# bind C-j display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}' \
#     	--bind 'enter:execute(tmux switch-client -t {})+accept'"
# bind -n M-f display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}' \
#     	--bind 'enter:execute(tmux switch-client -t {})+accept'"
# 
# bind -n M-f display-popup -h 95% -w 95% "git commit --verbose"
# bind -n M-F display-popup -h 95% -w 95% -d '#{pane_current_path}' -E 'gitui'
# 
# bind C-w display-popup -E "ta ~/Documents/Workspace"
# bind -n M-w display-popup -E "ta ~/Documents/Workspace"
# bind C-g display-popup -E "ta ~/Documents/Frappe/frappe-bench"
# bind -n M-g display-popup -E "tmux new-session -A -s scratch"
# bind -n M-G display-popup -E -h 95% -w 95% "tmux new-session -A -s scratch"
# bind k display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse -m --header=kill-session --preview 'tmux capture-pane -pt {}' |\
#     xargs -I {} tmux kill-session -t {}"
# 
# bind C-p display-popup -E "ta ~/Documents/Workspace"
# bind C-t new-session -A -s todo "cd ~/Documents/Workspace/todo && nvim -O backlog.md doing.md done.md"
# bind -n M-t new-session -A -s todo "cd ~/Documents/Workspace/todo && nvim -O backlog.md doing.md done.md"
# 
# bind-key -n M-t if-shell -F '#{==:#{session_name},todo}' { 
#     detach-client
#   } {
#       display-popup -E "tmux new-session -A -s todo -c ~/Documents/Workspace"
#   }
# 
# bind-key -n M-t if-shell -F '#{==:#{pane_start_command},todo}' { 
#     kill-pane
#   } {
#     split-window -bf -l 10 -c '#{pane_current_path}' "todo"
#   }
# bind -n M-B switch-client -l
# bind -n M-b switch-client -l
# bind -n M-i new-session -A -s martuico "cd ~/Documents/Workspace/ && nvim"
# bind i popup -E -h 95% -w 95% -x 100% "tmux new-session -A -s martuico 'cd ~/Documents/Workspace/ && nvim'"
# bind -n M-I popup -E "tmux new-session -A -s martuico 'cd ~/git/waylonwalker.com/ && nvim'"
# bind -n M-O popup 'tmux new-session -A -s images_waylonwalker_com "cd ~/git/images.waylonwalker.com/ && nvim"'
# bind C-n new-session
# bind-key C-b send-keys 'ta && exit' 'C-m'
bind C-j display-popup -E "tms switch"

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# Unbind default key bindings, we're going to override
unbind C-b
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind Up  # resize 5 rows up
unbind Down # resize 5 rows down
unbind Right # resize 5 rows right
unbind Left # resize 5 rows left
unbind Tab

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload the tmux config.
bind-key r source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Prompt to rename session right after it's created
# Rename session and window Alt-r
bind M-r command-prompt -I "#{window_name}" "rename-window '%%'"
bind M-R command-prompt -I "#{session_name}" "rename-session '%%'"

# Select Pane
bind-key -n S-Up select-pane -U
bind-key -n S-Left select-pane -L
bind-key -n S-Down select-pane -D
bind-key -n S-Right select-pane -R

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Select pane and windows
#bind -r C-[ previous-window
#bind -r C-] next-window
# Switch windows 
# usage: "SHIFT+arrow" (without prefix key)
bind -n S-[  previous-window
bind -n S-] next-window
bind -r N last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Zoom pane
bind + resize-pane -Z

# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"


# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity on

# TODO: Does not work as well, check on newer versions
# set -g visual-silence on

# BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
# set -g visual-bell on
# setw -g bell-action other

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# If you didn't use my dotfiles install script you'll need to:
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-online-status'



# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# system status
set -g @sysstat_mem_view_tmpl '#Used #[fg=#{mem.color}]#{mem.used}#[default] out of #{mem.total}'
set -g @sysstat_cpu_view_tmpl '#[fg=#{cpu.color3}]CPU:#[default] #[fg=#{cpu.color},bg=#{cpu.color2}]#{cpu.pused}#[default]'
set -g @sysstat_cpu_color_low "$color_level_ok default default"
set -g @sysstat_cpu_color_medium "$color_level_warn default default"
set -g @sysstat_cpu_color_stress "white,bold $color_level_stress $color_level_stress"

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_battery="#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain}"

wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
#wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date $wg_battery | #{online_status}"

# online and offline icon for tmux-online-status
set -g @online_icon "#[fg=$color_level_ok]●#[default]"
set -g @offline_icon "#[fg=$color_level_stress]●#[default]"


# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
#set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"


# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

# auto rename
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
## Restore Vim sessions
# set -g @resurrect-strategy-vim 'session'
## Restore Neovim sessions
# set -g @resurrect-strategy-nvim 'session'
## Restore Panes
# set -g @resurrect-capture-pane-contents 'on'
## Restore last saved environment (automatically)
# set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'

# Initialize TPM (keep this line at the very bottom of your tmux.conf).
run -b '~/.tmux/plugins/tpm/tpm'
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
